import static javax.swing.JOptionPane.showMessageDialog;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Formatter;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public class AddFunction extends javax.swing.JFrame {
    Formatter file;
    String _filelocation;
    String _id;
    String _firstname;
    String _lastname;
    String _age;
    String _gender ;
    String _email;
    String _yearsoflearning;
    String _profession;
    String _phone;
    DefaultTableModel _model;
    boolean IDbool = false;
    JTable _table = new javax.swing.JTable();
    ArrayList<Person> _list = new ArrayList<>();
    int _professionindex; //1.StudentsTech + TeachersTech 2.StudentsAcademic + TeachersAcademic
    Scanner scan;
    String studfilelocation;
    
    public AddFunction(ArrayList<Person> list,DefaultTableModel model,JTable table,String filelocation,int professionindex) {
        _professionindex = professionindex;
        _filelocation = filelocation;
        _list = list;
        _model = model;
        _table = table;
        initComponents();
         setTitle("add frame");
         ImageIcon icon;
         icon = new ImageIcon("src\\image\\icon.png");
        setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IDLabel = new javax.swing.JLabel();
        CheckButton = new javax.swing.JButton();
        IDField = new javax.swing.JTextField();
        RegistrationLabel = new javax.swing.JLabel();
        FirstNameLabel = new javax.swing.JLabel();
        FirstNameField = new javax.swing.JTextField();
        LastNameLabel = new javax.swing.JLabel();
        LastNameField = new javax.swing.JTextField();
        AgeLabel = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        AgeField = new javax.swing.JTextField();
        EmailField = new javax.swing.JTextField();
        ProfessionLabel = new javax.swing.JLabel();
        YearsInCollegeLabel = new javax.swing.JLabel();
        YearsField = new javax.swing.JTextField();
        GenderLabel = new javax.swing.JLabel();
        SumbitButton = new javax.swing.JButton();
        IDLabelFlag = new javax.swing.JLabel();
        PhoneLabel = new javax.swing.JLabel();
        PhoneField = new javax.swing.JTextField();
        ErrorLabel = new javax.swing.JLabel();
        GenderComboBox = new javax.swing.JComboBox<>();
        ProfessionComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 265));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        IDLabel.setText("ID:");
        getContentPane().add(IDLabel);
        IDLabel.setBounds(30, 40, 15, 14);

        CheckButton.setText("Check");
        CheckButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CheckButtonMouseClicked(evt);
            }
        });
        CheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckButtonActionPerformed(evt);
            }
        });
        getContentPane().add(CheckButton);
        CheckButton.setBounds(180, 40, 80, 23);
        getContentPane().add(IDField);
        IDField.setBounds(90, 40, 76, 20);

        RegistrationLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        RegistrationLabel.setText("Registration:");
        getContentPane().add(RegistrationLabel);
        RegistrationLabel.setBounds(20, 0, 99, 22);

        FirstNameLabel.setText("First Name:");
        getContentPane().add(FirstNameLabel);
        FirstNameLabel.setBounds(20, 70, 80, 14);

        FirstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(FirstNameField);
        FirstNameField.setBounds(90, 70, 76, 20);

        LastNameLabel.setText("Last Name:");
        getContentPane().add(LastNameLabel);
        LastNameLabel.setBounds(240, 70, 80, 14);

        LastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastNameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(LastNameField);
        LastNameField.setBounds(330, 70, 80, 20);

        AgeLabel.setText("Age:");
        getContentPane().add(AgeLabel);
        AgeLabel.setBounds(20, 100, 30, 14);

        EmailLabel.setText("Email:");
        getContentPane().add(EmailLabel);
        EmailLabel.setBounds(20, 130, 40, 14);

        AgeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgeFieldActionPerformed(evt);
            }
        });
        getContentPane().add(AgeField);
        AgeField.setBounds(90, 100, 75, 20);

        EmailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailFieldActionPerformed(evt);
            }
        });
        getContentPane().add(EmailField);
        EmailField.setBounds(90, 130, 100, 20);

        ProfessionLabel.setText("Profession:");
        getContentPane().add(ProfessionLabel);
        ProfessionLabel.setBounds(10, 160, 70, 14);

        YearsInCollegeLabel.setText("Years in College:");
        getContentPane().add(YearsInCollegeLabel);
        YearsInCollegeLabel.setBounds(220, 100, 110, 14);

        YearsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearsFieldActionPerformed(evt);
            }
        });
        getContentPane().add(YearsField);
        YearsField.setBounds(330, 100, 70, 20);

        GenderLabel.setText("Gender:");
        getContentPane().add(GenderLabel);
        GenderLabel.setBounds(250, 130, 60, 14);

        SumbitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SumbitButton.setText("Submit");
        SumbitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SumbitButtonMouseClicked(evt);
            }
        });
        SumbitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumbitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(SumbitButton);
        SumbitButton.setBounds(190, 190, 90, 25);
        getContentPane().add(IDLabelFlag);
        IDLabelFlag.setBounds(270, 40, 180, 20);

        PhoneLabel.setText("Phone:");
        getContentPane().add(PhoneLabel);
        PhoneLabel.setBounds(250, 160, 34, 14);

        PhoneField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneFieldActionPerformed(evt);
            }
        });
        getContentPane().add(PhoneField);
        PhoneField.setBounds(310, 160, 110, 20);
        getContentPane().add(ErrorLabel);
        ErrorLabel.setBounds(290, 190, 140, 20);

        GenderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        GenderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(GenderComboBox);
        GenderComboBox.setBounds(310, 130, 110, 20);

        ProfessionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ProfessionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfessionComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(ProfessionComboBox);
        ProfessionComboBox.setBounds(80, 160, 110, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fancy_background.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 550, 220);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FirstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNameFieldActionPerformed
        
    }//GEN-LAST:event_FirstNameFieldActionPerformed

    private void LastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastNameFieldActionPerformed
        
    }//GEN-LAST:event_LastNameFieldActionPerformed

    private void AgeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgeFieldActionPerformed
        
    }//GEN-LAST:event_AgeFieldActionPerformed

    private void YearsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearsFieldActionPerformed
        
    }//GEN-LAST:event_YearsFieldActionPerformed

    private void EmailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailFieldActionPerformed
        
    }//GEN-LAST:event_EmailFieldActionPerformed

    private void SumbitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumbitButtonActionPerformed

    }//GEN-LAST:event_SumbitButtonActionPerformed

    private void SumbitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SumbitButtonMouseClicked
      //GET INFORMATION FROM FIELDS [WORKING]
      _firstname = FirstNameField.getText();
      _lastname = LastNameField.getText();
      _age = AgeField.getText();
      _yearsoflearning = YearsField.getText();
      _email = EmailField.getText();
      _gender = (String) GenderComboBox.getSelectedItem();
      _profession = (String)ProfessionComboBox.getSelectedItem();
      _phone = PhoneField.getText();
      
      //CHECKING IF FIELD ARE FILLED
        if(checkFields() && IDbool){
            Person person = new Person(_id,_firstname,_lastname,_age,_gender,_phone,_profession,_email,_yearsoflearning);
            _list.add(person);
            int i = _list.size() - 1;
             _model.insertRow(_model.getRowCount(), new Object[]{
                  _list.get(i).getId(),
                  _list.get(i).getFirstname(),
                  _list.get(i).getLastname(),
                  _list.get(i).getAge(),
                  _list.get(i).getGender(),
                  _list.get(i).getPhone(),
                  _list.get(i).getProfession(),
                  _list.get(i).getEmail(),
                  _list.get(i).getYearsoflearning()    
            });
            showMessageDialog(null, _list.get(i).getFirstname() + " " + _list.get(i).getLastname() + " as been added.");
             UpdateFile();
            setVisible(false);
        }
        else if(IDbool == false && checkFields()){
            showMessageDialog(null, "Check ID before you submit");
        }
    }//GEN-LAST:event_SumbitButtonMouseClicked

    private void PhoneFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneFieldActionPerformed

    private void GenderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderComboBoxActionPerformed
        
    }//GEN-LAST:event_GenderComboBoxActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       //profession combo box
        GenderComboBox.removeItem("Item 1");
        GenderComboBox.removeItem("Item 2");
        GenderComboBox.removeItem("Item 3");
        GenderComboBox.removeItem("Item 4");
       
        GenderComboBox.addItem("Agender");
        GenderComboBox.addItem("Androgyne");
        GenderComboBox.addItem("Bigender");
        GenderComboBox.addItem("Cisgender");
        GenderComboBox.addItem("FTM");
        GenderComboBox.addItem("Gender Fluid");
        GenderComboBox.addItem("Gender Nonconforming");
        GenderComboBox.addItem("Gender Questioning");
        GenderComboBox.addItem("Gender Variant");
        GenderComboBox.addItem("Genderqueer");
        GenderComboBox.addItem("Intersex");
        GenderComboBox.addItem("MTF");
        GenderComboBox.addItem("Neither");
        GenderComboBox.addItem("Neutrois");
        GenderComboBox.addItem("Non-binary");
        GenderComboBox.addItem("Pangender");
        GenderComboBox.addItem("Transfeminine");
        GenderComboBox.addItem("Transgender");
        GenderComboBox.addItem("Transmasculine");
        GenderComboBox.addItem("Two-Spirit");
        GenderComboBox.addItem("Other");
        //////////////////////////////////////////
        // profession combobox
        if(_professionindex == 1){
            ProfessionComboBox.removeItem("Item 1");
            ProfessionComboBox.removeItem("Item 2");
            ProfessionComboBox.removeItem("Item 3");
            ProfessionComboBox.removeItem("Item 4");
            
            ProfessionComboBox.addItem("הנדסאי_תוכנה");
            ProfessionComboBox.addItem("הנדסאי_חשמל");
            ProfessionComboBox.addItem("מחשוב_רפואי");
            ProfessionComboBox.addItem("הנדסאי_תוכנה");
            ProfessionComboBox.addItem("הנדסאי_אלקטרוניקה");
            ProfessionComboBox.addItem("מכונאות_רכב");  
        }
        
        else{
            ProfessionComboBox.removeItem("Item 1");
            ProfessionComboBox.removeItem("Item 2");
            ProfessionComboBox.removeItem("Item 3");
            ProfessionComboBox.removeItem("Item 4");
            
            ProfessionComboBox.addItem("מדעי_המחשב");
            ProfessionComboBox.addItem("לימודי_המגדר");
            ProfessionComboBox.addItem("פסיכולוגיה");
            ProfessionComboBox.addItem("כלכלה_וניהול");
            ProfessionComboBox.addItem("ביוטכנולוגיה");
            ProfessionComboBox.addItem("מדעי_המזון");
            ProfessionComboBox.addItem("סוציולוגיה");
            
        }

        
        
    }//GEN-LAST:event_formWindowActivated

    private void ProfessionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfessionComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProfessionComboBoxActionPerformed

    private void CheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckButtonActionPerformed
        _id = IDField.getText();
        switch (CheckID(_id)) {
            case 1:
                IDbool = true;
                IDLabelFlag.setText("You can use this ID");
                IDLabelFlag.setForeground(Color.green);
                break;
            case 0:
                IDLabelFlag.setText("ID already exist in the system");
                IDLabelFlag.setForeground(Color.red);
                break;
            case -3:
                IDLabelFlag.setText("Invalid ID: The ID is too short");
                IDLabelFlag.setForeground(Color.red);
                break;
            case -2:
                IDLabelFlag.setText("Invalid ID:Too many numbers");
                IDLabelFlag.setForeground(Color.red);
                break;
            case -1:
                IDLabelFlag.setText("Invalid ID:Dont put Synbols");
                IDLabelFlag.setForeground(Color.red);
                break;
        }
    }//GEN-LAST:event_CheckButtonActionPerformed

    private void CheckButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckButtonMouseClicked
        //[WORKING]

    }//GEN-LAST:event_CheckButtonMouseClicked

    public int CheckID(String ID){ //[WORKING]
        if(ID.length() > 9){
            return -2 ;
        }
        if(ID.length() < 9){
            return -3 ;
        }
        for(int i = 0; i < 9; i++){
            if(ID.charAt(i) < 48 || ID.charAt(i) > 57){
                return -1;
            }
        }
                            
        if(_filelocation.equals("src\\data\\FILE_Students_Academic.txt") || _filelocation.equals("src\\data\\FILE_Students_Tech.txt")){
            studfilelocation =  "src\\data\\FILE_Students_Academic.txt";
            loadFile();
            if(checkIdInFiles(ID) == false)
                return 0;
            
            studfilelocation =  "src\\data\\FILE_Students_Tech.txt";
            loadFile();
            if(checkIdInFiles(ID) == false)
                return 0;
        }
        else{
            for(int i = 0; i < _list.size(); i++){
                if(_list.get(i).getId().equals(ID)){
                    return 0;
                }
            }
        }
        return 1;
    }
    
    public void UpdateFile(){ //[WORKING]
        String content = "";
        for(int i = 0; i < (_list.size()); i++){// taking the information from the list and push it into the table
            String a = _list.get(i).getId();
            String b = _list.get(i).getFirstname();
            String c = _list.get(i).getLastname();
            String d = _list.get(i).getAge();
            String e = _list.get(i).getGender();
            String f = _list.get(i).getPhone();
            String g = _list.get(i).getProfession();
            String h = _list.get(i).getEmail();
            String i1 = _list.get(i).getYearsoflearning();
            content += a + " " + b +" " + c + " " + " " + d + " " + e + " " + f + " " + g + " " + h + " " + i1 +"\n";
        }
            writeUsingFiles(String.format("%s",content));
    }
    
    
    private void writeUsingFiles(String data) {
        try {
            Files.write(Paths.get(_filelocation), data.getBytes());
        }catch (IOException e) {
           e.printStackTrace();
        }
    }
    
    public boolean checkFields(){
        boolean bool = true;
        if(_firstname.isEmpty( )){
                ErrorLabel.setText("First name is invalid");
                ErrorLabel.setForeground(Color.red);
                bool = false;
        }
         if(_lastname.isEmpty() ){
                ErrorLabel.setText("Last name is invalid");
                ErrorLabel.setForeground(Color.red);
                bool = false;
        }
        if(_age.isEmpty() ){
                ErrorLabel.setText("Age is invalid");
                ErrorLabel.setForeground(Color.red);
                bool = false;
        }
        if(_gender.isEmpty()){
                ErrorLabel.setText("Gender is invalid");
                ErrorLabel.setForeground(Color.red);
                bool = false;
        }
        if(_email.isEmpty()){
                ErrorLabel.setText("Email is invalid");
                ErrorLabel.setForeground(Color.red);
                bool = false;
        }
        if(_yearsoflearning.isEmpty()){
                ErrorLabel.setText("Year in college  is invalid");
                ErrorLabel.setForeground(Color.red);
                bool = false;
        }
        if(_profession.isEmpty()){
                ErrorLabel.setText("Profession is invalid");
                ErrorLabel.setForeground(Color.red);
                bool = false;
        }
         if(_phone.isEmpty() ){
                ErrorLabel.setText("Phone is invalid");
                ErrorLabel.setForeground(Color.red);
                bool = false;
        }
        return bool;
    }
    
        public void loadFile(){
            try { // converting file to list [WORKING]
               scan = new Scanner(new File(studfilelocation));
            } catch (FileNotFoundException ex) {
                 System.out.println("Error 404: File Not Found");
            }
        }
        public boolean checkIdInFiles(String ID){ // 0 - exist in the system, 1 - does not exist 
            System.out.println("GayFile");
            while(scan.hasNext()){ 
                String fileid = scan.next();
                if(fileid.equals(ID)){
                    return false;
                }
                scan.next();
                scan.next();
                scan.next();
                scan.next();
                scan.next();
                scan.next();
                scan.next();
                scan.next();
            } 
            return true;
        }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AgeField;
    private javax.swing.JLabel AgeLabel;
    private javax.swing.JButton CheckButton;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JLabel ErrorLabel;
    private javax.swing.JTextField FirstNameField;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JComboBox<String> GenderComboBox;
    private javax.swing.JLabel GenderLabel;
    private javax.swing.JTextField IDField;
    private javax.swing.JLabel IDLabel;
    private javax.swing.JLabel IDLabelFlag;
    private javax.swing.JTextField LastNameField;
    private javax.swing.JLabel LastNameLabel;
    private javax.swing.JTextField PhoneField;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JComboBox<String> ProfessionComboBox;
    private javax.swing.JLabel ProfessionLabel;
    private javax.swing.JLabel RegistrationLabel;
    private javax.swing.JButton SumbitButton;
    private javax.swing.JTextField YearsField;
    private javax.swing.JLabel YearsInCollegeLabel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
